/*导入本地没有的字体，这些字体需要自己去下载的
*下载字体的网址
http://www.dafont.com/
下面这只是定义这样一个字体的导入，就是将这个字体导入进来，你在哪里需要引用的话！
需要自己在需要的地方加上font-family:"Raphaelicons";这句话
*/
@font-face{
	font-family:"Raphaelicons";
	src:url('fonts/raphaelicons-webfont.eot') format('eot'),
		url('fonts/raphaelicons-webfont.svg') format('svg');
	font-weight: normal;
	font-style: normal;
}

body{
	font-family: Georgia, serif;
	background: #ddd;
	font-weight: 400;
	font-size: 15px;
	color: #333;
	overflow: hidden;
	/*css3字体更加光滑，锯齿的意思*/
	-webkit-font-smoothing:antialiased;
}

a{
	text-decoration: none;
	color: #555;
}

.clr{
	width: 0;
	height: 0;
	overflow: hidden;
	/*不希望float元素影响后面的元素*/
	clear: both;
	padding: 0;
	margin: 0;
}

.st-container{
	width: 100%;
	height: 100%;
	position: absolute;
	left: 0;
	top: 0;
	font-family:"微软雅黑";	
}

/*低端的导航条的实现方式*/
.st-container > input,
.st-container > a{
	/*这个a,input之所以都设置成20%，就是让点击a而没有点击到input单选框的时候，
	都显示选中的情况下因为此时的a和input的的宽度都是20%。只是在页面上显示的单选框没有那么宽而已
	*/
	width: 20%;
	height: 50px;
	line-height: 50px;
	position: fixed;
	bottom: 0px;
	cursor: pointer;
}

.st-container > input{
	opacity: 0;
	/*这里是因为a和input标签都设置了fixed的属性，而默认的是越到后面的优先级越高
	 *，所以这里就是a的优先级要高，而在这里这个导航的实现的原理就是判断单选按钮是否选中，选中的情况下才切换页面，所要把大选按钮放到上面来
	 * ，才可以点击的。
	 *所以要input的优先级更高，只能通过z-index设置了，下面a的z-index:10就是把a设置到后面去
	*/
	z-index: 9999;
}

.st-container > a{
	z-index: 10;
	font-weight: 700;
	font-size: 18px;
	background: #e23a6e;
	text-align: center;
	color: #fff;
	text-shadow: 1px 1px 1px rgb(151, 24, 64, 0.2);	
}

#st-control-1, #st-control-1 + a{
	left: 0%;
}
#st-control-2, #st-control-2 + a{
	left: 20%;
}
#st-control-3, #st-control-3 + a{
	left: 40%;
}
#st-control-4, #st-control-4 + a{
	left: 60%;
}
#st-control-5, #st-control-5 + a{
	left: 80%;
}

/*当选按钮是否选中
.st-container input:checked:hover + a。当前按钮被选中了之后，
*鼠标滑过的时候，不要变动背景颜色
*/
.st-container input:checked + a, 
.st-container input:checked:hover + a{
	background: #821134;
}

/*动态生成三角*/
.st-container input:checked + a:after{
	content: attr(data-icon);
	width: 0px;
	height: 0px;
	overflow: hidden;
	border: 20px solid transparent;
	border-bottom-color: #821134;
	position: absolute;
	bottom: 100%;
	left: 50%;
	margin-left: -20px;
}

.st-container input:hover + a{
	background: #AD244F;
}


/*content*/

.st-scroll,
.st-panel{
	width: 100%;
	height: 100%;
	position: relative;
}

.st-scroll{
	left: 0px;
	top: 0px;
	-webkit-transform: translated3d(0px, 0px, 0px);
	-moz-transform: translated3d(0px, 0px, 0px);
	-o-transform: translated3d(0px, 0px, 0px);
	-ms-transform: translated3d(0px, 0px, 0px);
	transform: translated3d(0px, 0px, 0px);
	/*这个属性就是定义当元素不面向屏幕的时候是否可见hidden/visible*/
	-webkit-backface-visibility: hidden;
	-o-transition: all 0.6s ease-in-out;
	-moz-transition: all 0.6s ease-in-out;
	-ms-transition: all 0.6s ease-in-out;
	transition: all 0.6s ease-in-out;
}

.st-panel{
	background:#FFF;
	overflow: hidden;
}

/*选中低端的导航条的时候，页面的切换方式，就是将第一张设置为平移的起始位置。来进行平移*/
#st-control-1:checked ~ .st-scroll{
	-webkit-transform: translateY(0%);
	-o-transform: translateY(0%);
	-moz-transform: translateY(0%);
	-ms-transform: translateY(0%);
	transform: translateY(0%);
}
#st-control-2:checked ~ .st-scroll{
	-webkit-transform: translateY(-100%);
	-o-transform: translateY(-100%);
	-moz-transform: translateY(-100%);
	-ms-transform: translateY(-100%);
	transform: translateY(-100%);
}
#st-control-3:checked ~ .st-scroll{
	-webkit-transform: translateY(-200%);
	-o-transform: translateY(-200%);
	-moz-transform: translateY(-200%);
	-ms-transform: translateY(-200%);
	transform: translateY(-200%);
}
#st-control-4:checked ~ .st-scroll{
	-webkit-transform: translateY(-300%);
	-o-transform: translateY(-300%);
	-moz-transform: translateY(-300%);
	-ms-transform: translateY(-300%);
	transform: translateY(-300%);
	
}
#st-control-5:checked ~ .st-scroll{
	-webkit-transform: translateY(-400%);
	-o-transform: translateY(-400%);
	-moz-transform: translateY(-400%);
	-ms-transform: translateY(-400%);
	transform: translateY(-400%);
}

/*画出顶部的三角形，是通过正方形旋转和隐藏实现的*/
.st-deco{
	width: 200px;
	height: 200px;
	background: #fa96b5;
	position: absolute;
	left: 50%;
	top: 0;
	margin-left: -100px;
	-webkit-transform: translateY(-50%) rotate(45deg);
}

/*在顶部创建的图形的元素的后面加入一个新的元素。*/
[data-icon]:after{
	content: attr(data-icon);
	width: 200px;
	height: 200px;
	color: #fff;
	font-size: 90px;
	text-align: center;
	line-hieght: 200px;
	position: absolute;
	left: 50%;
	top: 50%;
	margin: -100px 0 0 -100px;
	-webkit-transform:rotate(-45deg) translateY(50%);
	-o-transform:rotate(-45deg) translateY(50%);
	-moz-transform:rotate(-45deg) translateY(50%);
	transform:rotate(-45deg) translateY(50%);
	/*使用我们导入的字体*/
	font-family:"Raphaelicons";
	text-shadow: 1px 1px 1px rgb(151, 24, 64, 0.2);	
}

/*创建H2的位置和样式*/
.st-panel h2{
	color: #e23a6e;
	font-size: 54px;
	line-height: 50px;
	text-align: center;
	font-weight: 900;
	width: 80%;
	position: absolute;
	left: 10%;
	top: 40%;
	margin-top: -70px;
	text-shadow: 1px 1px 1px ragb(151, 24, 64, 0.2);
	-webkit-backface-visibility:hidden;
}

/*所有h2的动画实现方式
*这里要注意“~”和“+”所匹配的是当前元素的后面的元素是同一个等级的元素。+是匹配后面的第一个元素。~匹配后面的所有元素
*/
#st-control-1:checked ~ .st-scroll #st-panel-1 h2,
#st-control-2:checked ~ .st-scroll #st-panel-2 h2,
#st-control-3:checked ~ .st-scroll #st-panel-3 h2,
#st-control-4:checked ~ .st-scroll #st-panel-4 h2,
#st-control-5:checked ~ .st-scroll #st-panel-5 h2 {
	-webkit-animation: moveDown 0.6s ease-in-out 0.2s backwards;
	-o-animation: moveDown 0.6s ease-in-out 0.2s backwards;
	-moz-animation: moveDown 0.6s ease-in-out 0.2s backwards;
	-ms-animation: moveDown 0.6s ease-in-out 0.2s backwards;
	animation: moveDown 0.6s ease-in-out 0.2s backwards;
}

/*animation的自定义的动画,使用animation和transition的唯一区别就是
	在需要事件触发的就使用transition,不需要事件触发的就使用animation,
	animation是网页打开在那个位置的时候就会出现相应的动画。
*/
@-webkit-keyframes moveDown{
	0%{
		-webkit-transform: translateY(-60px);
		opacity: 0;
	}
	100%{
		-webkit-transform: translateY(0px);
		opacity: 1;
	}
}
@-moz-keyframes moveDown{
	0%{
		-moz-transform: translateY(-60px);
		opacity: 0;
	}
	100%{
		-moz-transform: translateY(0px);
		opacity: 1;
	}
}
@-o-keyframes moveDown{
	0%{
		-o-transform: translateY(-60px);
		opacity: 0;
	}
	100%{
		-o-transform: translateY(0px);
		opacity: 1;
	}
}
@-ms-keyframes moveDown{
	0%{
		-ms-transform: translateY(-60px);
		opacity: 0;
	}
	100%{
		-ms-transform: translateY(0px);
		opacity: 1;
	}
}
@keyframes moveDown{
	0%{
		transform: translateY(-60px);
		opacity: 0;
	}
	100%{
		transform: translateY(0px);
		opacity: 1;
	}
}

/*p标签的样式*/

.st-panel p{
	position: absolute;
	width: 50%;
	left: 25%;
	top: 50%;
	font-size: 16px;
	line-height: 22px;
	padding: 0;
	text-align: center;
	-webkit-backface-visibility: hidden;
	color: #8b8b8b;
	margin-top: 10px;
}

/*p标签的动画*/
#st-control-1:checked ~ .st-scroll #st-panel-1 p,
#st-control-2:checked ~ .st-scroll #st-panel-2 p,
#st-control-3:checked ~ .st-scroll #st-panel-3 p,
#st-control-4:checked ~ .st-scroll #st-panel-4 p,
#st-control-5:checked ~ .st-scroll #st-panel-5 p{
	-webkit-animation: moveUp 0.6s ease-in-out 0.2s backwards;
	-o-animation: moveUp 0.6s ease-in-out 0.2s backwards;
	-moz-animation: moveUp 0.6s ease-in-out 0.2s backwards;
	-ms-animation: moveUp 0.6s ease-in-out 0.2s backwards;
	animation: moveUp 0.6s ease-in-out 0.2s backwards;
}

@-webkit-keyframes moveUp{
	from{
		-webkit-transform: translateY(60px);
		opacity: 0;
	}
	to{
		-webkit-transform: translateY(0px);
		opacity: 1;
	}
}
@-o-keyframes moveUp{
	from{
		-o-transform: translateY(60px);
		opacity: 0;
	}
	to{
		-o-transform: translateY(0px);
		opacity: 1;
	}
}
@-moz-keyframes moveUp{
	from{
		-moz-transform: translateY(60px);
		opacity: 0;
	}
	to{
		-moz-transform: translateY(0px);
		opacity: 1;
	}
}
@-ms-keyframes moveUp{
	from{
		-ms-transform: translateY(60px);
		opacity: 0;
	}
	to{
		-ms-transform: translateY(0px);
		opacity: 1;
	}
}
@keyframes moveUp{
	from{
		transform: translateY(60px);
		opacity: 0;
	}
	to{
		transform: translateY(0px);
		opacity: 1;
	}
}

/*页面的背景颜色切换*/
.st-color{
	background: #fa96b5;
}

.st-color .st-deco{
	background: #fff;
}

.st-color [data-icon]:after{
	color: #fa96b5;
}

.st-color h2{
	color: #fff;
	text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);
}

.st-color p{
	color: rgba(255, 255, 255, 0.8);
}


